{"version":3,"sources":["components/Titles.js","components/Form.js","components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Titles","className","Form","props","onSubmit","getWeather","type","name","placeholder","Weather","city","country","temperature","humidity","description","error","API_KEY","App","state","undefined","e","a","preventDefault","target","elements","value","fetch","api_call","json","data","setState","main","temp","sys","weather","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOASeA,EAPA,kBACd,gCACC,oBAAIC,UAAU,yBAAd,4BACA,oBAAIA,UAAU,4BAAd,8DCKaC,EARF,SAAAC,GAAK,OACjB,uBAAMC,SAAUD,EAAME,WAAtB,UACC,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,YAAY,YAAW,uBAAK,uBAC3D,uBAAOF,KAAK,OAAOC,KAAK,UAAUC,YAAY,eAAc,uBAAK,uBACjE,qDCwBaC,EA5BC,SAAAN,GAAK,OACpB,sBAAKF,UAAU,gBAAf,UAEEE,EAAMO,MAAQP,EAAMQ,SAAW,oBAAGV,UAAU,eAAb,uBAC9B,uBAAMA,UAAU,iBAAhB,cAAoCE,EAAMO,KAA1C,KAAoDP,EAAMQ,cAI3DR,EAAMS,aAAe,oBAAGX,UAAU,eAAb,0BACpB,uBAAMA,UAAU,iBAAhB,cAAoCE,EAAMS,YAA1C,UAIDT,EAAMU,UAAY,oBAAGZ,UAAU,eAAb,uBACjB,uBAAMA,UAAU,iBAAhB,cAAoCE,EAAMU,SAA1C,UAIDV,EAAMW,aAAe,oBAAGb,UAAU,eAAb,yBACpB,uBAAMA,UAAU,iBAAhB,cAAoCE,EAAMW,YAA1C,UAIDX,EAAMY,OAAS,mBAAGd,UAAU,iBAAb,SAAgCE,EAAMY,YCnBlDC,EAAU,mCAmEDC,E,4MAhEbC,MAAQ,CACNN,iBAAaO,EACbT,UAAMS,EACNR,aAASQ,EACTN,cAAUM,EACVL,iBAAaK,EACbJ,WAAOI,G,EAETd,W,uCAAa,WAAOe,GAAP,qBAAAC,EAAA,6DACXD,EAAEE,iBACIZ,EAAOU,EAAEG,OAAOC,SAASd,KAAKe,MAC9Bd,EAAUS,EAAEG,OAAOC,SAASb,QAAQc,MAH/B,SAIYC,MAAM,oDAAD,OAAqDhB,EAArD,YAA6DC,EAA7D,kBAA8EK,IAJ/F,cAILW,EAJK,gBAKQA,EAASC,OALjB,OAKLC,EALK,OAMPnB,GAAQC,EACV,EAAKmB,SAAS,CACZlB,YAAaiB,EAAKE,KAAKC,KACvBtB,KAAMmB,EAAKtB,KACXI,QAASkB,EAAKI,IAAItB,QAClBE,SAAUgB,EAAKE,KAAKlB,SACpBC,YAAae,EAAKK,QAAQ,GAAGpB,YAC7BC,MAAO,KAGT,EAAKe,SAAS,CACZlB,iBAAaO,EACbT,UAAMS,EACNR,aAASQ,EACTN,cAAUM,EACVL,iBAAaK,EACbJ,MAAO,6BAtBA,4C,kGA0Bb,WACE,OACE,8BACE,qBAAKd,UAAU,UAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,2BAAf,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,0BAAf,UACE,cAAC,EAAD,CAAMI,WAAY8B,KAAK9B,aACvB,cAAC,EAAD,CACEO,YAAauB,KAAKjB,MAAMN,YACxBC,SAAUsB,KAAKjB,MAAML,SACrBH,KAAMyB,KAAKjB,MAAMR,KACjBC,QAASwB,KAAKjB,MAAMP,QACpBG,YAAaqB,KAAKjB,MAAMJ,YACxBC,MAAOoB,KAAKjB,MAAMH,0B,GArDpBqB,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.79bd9de8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Titles = () => (\n\t<div>\n\t\t<h1 className=\"title-container__title\">Weather Finder</h1>\n\t\t<h3 className=\"title-container__subtitle\">Find out temperature, conditions and more...</h3>\n\t</div>\n);\n\nexport default Titles;","import React from \"react\";\n\nconst Form = props => (\n\t<form onSubmit={props.getWeather}>\n\t\t<input type=\"text\" name=\"city\" placeholder=\"City...\"/><br/><br/>\n\t\t<input type=\"text\" name=\"country\" placeholder=\"Country...\"/><br/><br/>\n\t\t<button>Get Weather</button>\n\t</form>\n);\n\nexport default Form;","import React from \"react\";\n\nconst Weather = props => (\n\t<div className=\"weather__info\">\n\t {\t\n\t \tprops.city && props.country && <p className=\"weather__key\"> Location: \n\t \t\t<span className=\"weather__value\"> { props.city }, { props.country }</span>\n\t \t</p> \n\t }\n\t { \t\n\t \tprops.temperature && <p className=\"weather__key\"> Temperature: \n\t \t\t<span className=\"weather__value\"> { props.temperature }\t</span>\n\t \t</p> \n\t }\n\t { \t\n\t \tprops.humidity && <p className=\"weather__key\"> Humidity: \n\t \t\t<span className=\"weather__value\"> { props.humidity } </span>\n\t \t</p> \n\t }\n\t { \t\n\t \tprops.description && <p className=\"weather__key\"> Conditions: \n\t \t\t<span className=\"weather__value\"> { props.description } </span>\n\t </p> \n\t }\n\t { \n\t \tprops.error && <p className=\"weather__error\">{ props.error }</p>  \n\t }\n\t</div>\n);\n\nexport default Weather;","import React from \"react\";\n\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\n\nconst API_KEY = \"5fbb1de323089ea9009396a8e38279b9\";\n\nclass App extends React.Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined\n  }\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${API_KEY}`);\n    const data = await api_call.json();\n    if (city && country) {\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: \"\"\n      });\n    } else {\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        error: \"Please enter the values.\"\n      });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <div className=\"main\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-xs-5 title-container\">\n                  <Titles />\n                </div>\n                <div className=\"col-xs-7 form-container\">\n                  <Form getWeather={this.getWeather} />\n                  <Weather\n                    temperature={this.state.temperature}\n                    humidity={this.state.humidity}\n                    city={this.state.city}\n                    country={this.state.country}\n                    description={this.state.description}\n                    error={this.state.error}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}